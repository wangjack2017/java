package jus;
import javax.sound.midi.InvalidMidiDataException;
import javax.sound.midi.MidiEvent;
import javax.sound.midi.Sequence;
import javax.sound.midi.ShortMessage;
import javax.sound.midi.Track;
/**
 * 监听非gui事件----midi事件
 * 制作简单的midi事件
 * Sequence是包含音乐信息可以由回放的数据结构（通常是整首歌曲或组合物） Sequencer对象。 
 * 具体来说， Sequence包含定时信息和一个或多个轨道。 
 * 每个track由一系列MIDI事件（如音符，音符，程序更改和元事件）组成。 序列的时序信息指定用于对序列中的事件进行时间戳的单位类型。 
    Sequence可以从MIDI文件通过文件读入的输入流和调用的一个来创建getSequence的方法MidiSystem 。 
    还可以从零开始构建一个序列，将新的Tracks添加到空的Sequence ，并将MidiEvent对象添加到这些Tracks 
 * @author 王思伟
 *
 */
public class demo18 {
    public static void main(String [] args) throws InvalidMidiDataException{
        Sequence seq=new Sequence(1,2);
        Track track=seq.createTrack();
        //创建信息实例
        ShortMessage a=new ShortMessage();
        
        //调用setmessage（）方法
        a.setMessage(144, 1, 20,100);
        //制作信息的midievent实例
        MidiEvent no=new MidiEvent(a,1);
        //把事件加到track上
        track.add(no);
        
        
    }
}
